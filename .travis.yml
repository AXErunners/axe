# errata:
# - sudo/dist/group are set so as to get Blue Box VMs, necessary for [loopback]
#   IPv6 support

sudo: required
dist: trusty

os: linux
language: minimal

services:
  - docker

cache:
  ccache: true
  directories:
    - $HOME/cache

env:
  global:
    # DOCKER_HUB_USER
    - secure: "pIlZnFRXOyOJSgW9Ugi/AmVySM4SfGyjVPewqrP9OLKMrxHxNCpBnCr4xeOb650vM7tKa0Gj3/K42nIDETnwFY6MJWyheI+nmWCapVgBxNChgyGPmUUFOXDU2CVVvvY1lC+VdjKIaBVOCKawe2wD/ejlHTUfuAN02Lu9XiMN99dDXYjVSFM+wiClsXUbt4RcUY7JJm6kV+MxyDeJLDcBhyno0vdgaXdxJ+YipjHHnh9Am3rb/69/0UHXJpMP2V20Lo3RplHv/GbRoLA2vMbblGMvvaULe8WJmKzuFh10uPB5BUqSI1CJc94Lo92UJXamtzLK3UiIvXQ7cLAtWzmog9Edtw9xFLGY+wqCgoGIDIvvL7z3k3gKZ1tutf2FJ4JPwjjbb/GukTTppYiubk4A+MOGLOzkEzE1dPMs9w13T4l0y+z5MuV2XyzVvz4gNdqBH4movoRXpIOInBM7QYu7uoB4VvSnTCsuj0cUmGBP/kz5qlIoR04Xe4B4jieaHybO+cDtFVZnEoHER/mq56eVFNKkCfX0IrpLWYmZheDtgYEIS0GN6s91jGldBjdfHnzikq9aiZvDIpzzGHvGUI8eiiko69g0Oahsm45GQOdu+bT89/+zzrf1FNeOHQ0JBDODTNljZAWOzpi1IooP1R9Pq8wmOpX4bk792r+wfaXhE3E="
    # DOCKER_HUB_PASSWORD
    - secure: "BIbW/xyqRbOh2N2xdQuF3ccOg8sO6y+vIV5C3O11tuLurGwm6g8fP4WEEROXw/faCE5s4jrZpJkjaiP44RYB4VEliXJtFcGs3FLgitzJj7IW8gnHbDz0heEPrA650QT+m1/G+vT0v1txeScYlOOuTZ5C2iVuCaJcfdp7xgOq0vd8o8CCbobBjamMtpjRHDH+UWUZnu3Vb72Tq4gfhlb+dSy09vSeJdoyjARIJjvdMEFNyb9zuo67AE8VlPFFAyXj8dU96id6d/8pYnQCe+FIPZbhmbwzZZ45fkdMNJVsIEmEZyi5O+tzGRl2Gw8VuRQktsZYF92JzmDba+j0kSjbzLr5ws74ZnXKIxxUPlEnHHspCwrAMfpNCrEvTgZfuB0oJOLAfp+wsq87MHFQjmprDUtAEKx2HMybbt6CepJQPo1Jdm59F/83GHWsE885yH+afRahmaJNYBUkLXAuxDy6Hg/sxbndU+lKqqQdsXIZNKpDApJi+zkHpmQFhR51EvBw7R+9MhbG6xQCtmZ8/IGn8lOcMXmN55jS5XIhVvHDxVlpuLLpkkCzwsZ0PC7XHkI8eFnjs8zX7pxpn0p3tNx+45ODV0ymMmF9PWP16rPPVS+blFqKuHnvSqBRW3oS69ilR1waORhBVlTvjkdzSQa0Ec0HblzW+qjVd41gsAc6r8s="
    - DOCKER_BUILD=false

stages:
  - build depends
  - build src
  - run tests
  - build docker

builddepends: &builddepends
  stage: build depends
  script:
    - $DOCKER_RUN_IN_BUILDER ./ci/build_depends.sh

buildsrc: &buildsrc
  stage: build src
  script:
    - $DOCKER_RUN_IN_BUILDER ./ci/build_depends.sh
    - $DOCKER_RUN_IN_BUILDER ./ci/build_src.sh

runtests: &runtests
  stage: run tests
  script:
    - $DOCKER_RUN_IN_BUILDER ./ci/build_depends.sh
    - $DOCKER_RUN_IN_BUILDER ./ci/build_src.sh
    - $DOCKER_RUN_IN_BUILDER ./ci/test_unittests.sh
    - if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then extended="--extended --exclude pruning,dbcrash"; fi
    - $DOCKER_RUN_IN_BUILDER ./ci/test_integrationtests.sh --jobs=3 ${extended}

builddocker: &builddocker
  stage: build docker
  script:
    # no need to run tests again here
    - if [ "$DOCKER_BUILD" = "true" ]; then $DOCKER_RUN_IN_BUILDER ./ci/build_depends.sh && $DOCKER_RUN_IN_BUILDER ./ci/build_src.sh && BUILD_DIR=build-ci/axecore-$BUILD_TARGET ./docker/build-docker.sh; fi

jobs:
  include:
    # build depends
    - <<: *builddepends
      env: BUILD_TARGET=arm-linux
    - <<: *builddepends
      env: BUILD_TARGET=win32
    - <<: *builddepends
      env: BUILD_TARGET=win64
    - <<: *builddepends
      env: BUILD_TARGET=linux32
    - <<: *builddepends
      env: BUILD_TARGET=linux64
    - <<: *builddepends
      env: BUILD_TARGET=linux64_nowallet
    - <<: *builddepends
      env: BUILD_TARGET=linux64_release DOCKER_BUILD=true
    - <<: *builddepends
      env: BUILD_TARGET=mac
    # build source
    - <<: *buildsrc
      env: BUILD_TARGET=arm-linux
    - <<: *buildsrc
      env: BUILD_TARGET=win32
    - <<: *buildsrc
      env: BUILD_TARGET=win64
    - <<: *buildsrc
      env: BUILD_TARGET=linux32
    - <<: *buildsrc
      env: BUILD_TARGET=linux64
    - <<: *buildsrc
      env: BUILD_TARGET=linux64_nowallet
    - <<: *buildsrc
      env: BUILD_TARGET=linux64_release DOCKER_BUILD=true
    - <<: *buildsrc
      env: BUILD_TARGET=mac
    # run tests (no tests for arm-linux and mac)
    - <<: *runtests
      env: BUILD_TARGET=win32
    - <<: *runtests
      env: BUILD_TARGET=win64
    - <<: *runtests
      env: BUILD_TARGET=linux32
    - <<: *runtests
      env: BUILD_TARGET=linux64
    - <<: *runtests
      env: BUILD_TARGET=linux64_nowallet
    - <<: *runtests
      env: BUILD_TARGET=linux64_release DOCKER_BUILD=true
    # build docker
    - <<: *builddocker
      env: BUILD_TARGET=linux64_release DOCKER_BUILD=true

before_cache:
  # Save builder image
  - docker save axe-builder-$BUILD_TARGET-$TRAVIS_JOB_NUMBER $(docker history -q axe-builder-$BUILD_TARGET-$TRAVIS_JOB_NUMBER | grep -v \<missing\>) | gzip -2 > $HOME/cache/docker/axe-builder-$BUILD_TARGET.tar.gz

before_install:
  - travis_retry travis_apt_get_update
  - travis_retry sudo apt-get -yq --no-install-suggests --no-install-recommends install docker-ce realpath

install:
    # Fix annoying Travis bug: a branch with a single commit has an empty TRAVIS_COMMIT_RANGE sometimes
    - if [ -z "$TRAVIS_COMMIT_RANGE" ]; then export TRAVIS_COMMIT_RANGE="HEAD~..HEAD"; fi
    # Our scripts try to be Travis agnostic
    - export PULL_REQUEST="$TRAVIS_PULL_REQUEST"
    - export COMMIT_RANGE="$TRAVIS_COMMIT_RANGE"
    - export JOB_NUMBER="$TRAVIS_JOB_NUMBER"
    - export HOST_SRC_DIR=$TRAVIS_BUILD_DIR
    - export HOST_CACHE_DIR=$HOME/cache
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - export PYTHON_DEBUG=1
    - source ./ci/matrix.sh
    - mkdir -p $HOST_CACHE_DIR/docker && mkdir -p $HOST_CACHE_DIR/ccache && mkdir -p $HOST_CACHE_DIR/depends && mkdir -p $HOST_CACHE_DIR/sdk-sources
    # Keep this as it makes caching related debugging easier
    - ls -lah $HOST_CACHE_DIR && ls -lah $HOST_CACHE_DIR/depends && ls -lah $HOST_CACHE_DIR/ccache && ls -lah $HOST_CACHE_DIR/docker
    # Load cached builder image
    - if [ -f $HOST_CACHE_DIR/docker/axe-builder-$BUILD_TARGET.tar.gz ]; then zcat $HOST_CACHE_DIR/docker/axe-builder-$BUILD_TARGET.tar.gz | docker load || true; fi
    - travis_retry docker pull ubuntu:bionic
    - travis_retry docker build -t $BUILDER_IMAGE_NAME --build-arg=USER_ID=$UID --build-arg=GROUP_ID=$UID --build-arg=BUILD_TARGET=$BUILD_TARGET -f ci/Dockerfile.builder ci
before_script:
    # Make sure stdout is in blocking mode. Otherwise builds will fail due to large writes to stdout
    # See https://github.com/travis-ci/travis-ci/issues/4704. If this gets fixed, this line can also be removed.
    - python3 -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
    # Build docker image only for development branch of the main repo
    - if [ "$TRAVIS_REPO_SLUG" != "AXErunners/axe" -o "$TRAVIS_BRANCH" != "development" -o "$TRAVIS_PULL_REQUEST" != "false" ]; then export DOCKER_BUILD="false"; echo DOCKER_BUILD=$DOCKER_BUILD; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
after_success:
    - if [ "$DOCKER_BUILD" = "true" ]; then docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD && ./docker/push-docker.sh; fi
